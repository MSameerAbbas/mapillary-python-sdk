"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8482],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>u});var l=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,l)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,l,n=function(e,t){if(null==e)return{};var r,l,n={},a=Object.keys(e);for(l=0;l<a.length;l++)r=a[l],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)r=a[l],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=l.createContext({}),c=function(e){var t=l.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=c(e.components);return l.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=c(r),u=n,y=d["".concat(p,".").concat(u)]||d[u]||s[u]||a;return r?l.createElement(y,i(i({ref:t},m),{},{components:r})):l.createElement(y,i({ref:t},m))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<a;c++)i[c]=r[c];return l.createElement.apply(null,i)}return l.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3601:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var l=r(7462),n=(r(7294),r(3905));const a={"sidebar position":2},i=void 0,o={unversionedId:"mapillary.controller/mapillary.controller.detection",id:"mapillary.controller/mapillary.controller.detection",isDocsHomePage:!1,title:"mapillary.controller.detection",description:"mapillary.controllers.detection",source:"@site/docs/mapillary.controller/mapillary.controller.detection.md",sourceDirName:"mapillary.controller",slug:"/mapillary.controller/mapillary.controller.detection",permalink:"/mapillary-python-sdk/docs/mapillary.controller/mapillary.controller.detection",editUrl:"https://github.com/mapillary/mapillary-python-sdk/tree/main/docs/docs/mapillary.controller/mapillary.controller.detection.md",tags:[],version:"current",frontMatter:{"sidebar position":2},sidebar:"tutorialSidebar",previous:{title:"mapillary.config",permalink:"/mapillary-python-sdk/docs/mapillary.config/mapillary.config"},next:{title:"mapillary.controller.feature",permalink:"/mapillary-python-sdk/docs/mapillary.controller/mapillary.controller.feature"}},p=[{value:"mapillary.controllers.detection",id:"mapillarycontrollersdetection",children:[]},{value:"mapillary.controller.detection.get_image_detections_controller(image_id: Unionstr, int, fields: list = [])",id:"mapillarycontrollerdetectionget_image_detections_controllerimage_id-unionstr-int-fields-list--",children:[]},{value:"mapillary.controller.detection.get_map_feature_detections_controller(map_feature_id: Unionstr, int, fields: list = [])",id:"mapillarycontrollerdetectionget_map_feature_detections_controllermap_feature_id-unionstr-int-fields-list--",children:[]}],c={toc:p};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,l.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"mapillarycontrollersdetection"},"mapillary.controllers.detection"),(0,n.kt)("p",null,"This module implements the detection based business logic functionalities of the Mapillary\nPython SDK."),(0,n.kt)("p",null,"For more information, please check out ",(0,n.kt)("a",{parentName:"p",href:"https://www.mapillary.com/developer/api-documentation/"},"https://www.mapillary.com/developer/api-documentation/")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Copyright: (c) 2021 Facebook")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"License: MIT LICENSE")),(0,n.kt)("h3",{id:"mapillarycontrollerdetectionget_image_detections_controllerimage_id-unionstr-int-fields-list--"},"mapillary.controller.detection.get_image_detections_controller(image_id: Union","[str, int]",", fields: list = [])"),(0,n.kt)("p",null,"Get image detections with given (image) key"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"image_id")," (",(0,n.kt)("em",{parentName:"li"},"str"),") \u2013 The image id")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"* **fields** (*list*) \u2013 The fields possible for the detection endpoint. Please see\n[https://www.mapillary.com/developer/api-documentation](https://www.mapillary.com/developer/api-documentation) for more information\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Returns")),(0,n.kt)("p",{parentName:"li"},"  GeoJSON"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Return type")),(0,n.kt)("p",{parentName:"li"},"  dict"))),(0,n.kt)("h3",{id:"mapillarycontrollerdetectionget_map_feature_detections_controllermap_feature_id-unionstr-int-fields-list--"},"mapillary.controller.detection.get_map_feature_detections_controller(map_feature_id: Union","[str, int]",", fields: list = [])"),(0,n.kt)("p",null,"Get image detections with given (map feature) key"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"map_feature_id")," (",(0,n.kt)("em",{parentName:"li"},"str"),") \u2013 The map feature id")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"* **fields** (*list*) \u2013 The fields possible for the detection endpoint. Please see\n[https://www.mapillary.com/developer/api-documentation](https://www.mapillary.com/developer/api-documentation) for more information\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Returns")),(0,n.kt)("p",{parentName:"li"},"  GeoJSON"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Return type")),(0,n.kt)("p",{parentName:"li"},"  dict"))))}m.isMDXComponent=!0}}]);