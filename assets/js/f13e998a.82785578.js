"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3759],{3905:(t,e,r)=>{r.d(e,{Zo:()=>s,kt:()=>y});var a=r(7294);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function n(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function p(t,e){if(null==t)return{};var r,a,i=function(t,e){if(null==t)return{};var r,a,i={},l=Object.keys(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||(i[r]=t[r]);return i}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}var o=a.createContext({}),m=function(t){var e=a.useContext(o),r=e;return t&&(r="function"==typeof t?t(e):n(n({},e),t)),r},s=function(t){var e=m(t.components);return a.createElement(o.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var r=t.components,i=t.mdxType,l=t.originalType,o=t.parentName,s=p(t,["components","mdxType","originalType","parentName"]),c=m(r),y=i,d=c["".concat(o,".").concat(y)]||c[y]||u[y]||l;return r?a.createElement(d,n(n({ref:e},s),{},{components:r})):a.createElement(d,n({ref:e},s))}));function y(t,e){var r=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var l=r.length,n=new Array(l);n[0]=c;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p.mdxType="string"==typeof t?t:i,n[1]=p;for(var m=2;m<l;m++)n[m]=r[m];return a.createElement.apply(null,n)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},3855:(t,e,r)=>{r.r(e),r.d(e,{contentTitle:()=>n,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>o});var a=r(7462),i=(r(7294),r(3905));const l={"sidebar position":6},n=void 0,p={unversionedId:"mapillary.utils/mapillary.utils.time",id:"mapillary.utils/mapillary.utils.time",isDocsHomePage:!1,title:"mapillary.utils.time",description:"mapillary.utils.time",source:"@site/docs/mapillary.utils/mapillary.utils.time.md",sourceDirName:"mapillary.utils",slug:"/mapillary.utils/mapillary.utils.time",permalink:"/mapillary-python-sdk/docs/mapillary.utils/mapillary.utils.time",editUrl:"https://github.com/mapillary/mapillary-python-sdk/tree/main/docs/docs/mapillary.utils/mapillary.utils.time.md",tags:[],version:"current",frontMatter:{"sidebar position":6},sidebar:"tutorialSidebar",previous:{title:"mapillary.utils",permalink:"/mapillary-python-sdk/docs/mapillary.utils/mapillary.utils"},next:{title:"mapillary.utils.verify",permalink:"/mapillary-python-sdk/docs/mapillary.utils/mapillary.utils.verify"}},o=[{value:"mapillary.utils.time",id:"mapillaryutilstime",children:[]},{value:"mapillary.utils.time.date_to_unix_timestamp(date: str)",id:"mapillaryutilstimedate_to_unix_timestampdate-str",children:[]}],m={toc:o};function s(t){let{components:e,...r}=t;return(0,i.kt)("wrapper",(0,a.Z)({},m,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"mapillaryutilstime"},"mapillary.utils.time"),(0,i.kt)("p",null,"This module contains the time utilies for the UNIX epoch seconds, the time and the date range, and\nthe date filtering logic."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Copyright: (c) 2021 Facebook")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"License: MIT LICENSE")),(0,i.kt)("h3",{id:"mapillaryutilstimedate_to_unix_timestampdate-str"},"mapillary.utils.time.date_to_unix_timestamp(date: str)"),(0,i.kt)("p",null,"A utility function that converts the given date\ninto its UNIX epoch timestamp equivalent. It accepts the formats, ranging from\nYYYY-MM-DDTHH:MM:SS, to simply YYYY, and a permutation of the fields in between as well"),(0,i.kt)("p",null,"Has a special argument, \u2018","*","\u2019, which returns current timestamp"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Parameters")),(0,i.kt)("p",{parentName:"li"},"  ",(0,i.kt)("strong",{parentName:"p"},"date")," (",(0,i.kt)("em",{parentName:"p"},"str"),") \u2013 The date to get the UNIX timestamp epoch of"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Returns")),(0,i.kt)("p",{parentName:"li"},"  The UNIX timestamp equivalent of the input date"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Return type")),(0,i.kt)("p",{parentName:"li"},"  int"))),(0,i.kt)("p",null,"Usage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},">>> from utils.time_utils import date_to_unix_timestamp\n>>> date_to_unix_timestamp('2020-10-23')\n... \"1603393200\"\n")))}s.isMDXComponent=!0}}]);