"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3759],{3905:function(t,e,r){r.d(e,{Zo:function(){return m},kt:function(){return y}});var i=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,i)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function p(t,e){if(null==t)return{};var r,i,n=function(t,e){if(null==t)return{};var r,i,n={},a=Object.keys(t);for(i=0;i<a.length;i++)r=a[i],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(i=0;i<a.length;i++)r=a[i],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var o=i.createContext({}),u=function(t){var e=i.useContext(o),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},m=function(t){var e=u(t.components);return i.createElement(o.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},c=i.forwardRef((function(t,e){var r=t.components,n=t.mdxType,a=t.originalType,o=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),c=u(r),y=n,d=c["".concat(o,".").concat(y)]||c[y]||s[y]||a;return r?i.createElement(d,l(l({ref:e},m),{},{components:r})):i.createElement(d,l({ref:e},m))}));function y(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var a=r.length,l=new Array(a);l[0]=c;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p.mdxType="string"==typeof t?t:n,l[1]=p;for(var u=2;u<a;u++)l[u]=r[u];return i.createElement.apply(null,l)}return i.createElement.apply(null,r)}c.displayName="MDXCreateElement"},3855:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return m},default:function(){return c}});var i=r(7462),n=r(3366),a=(r(7294),r(3905)),l=["components"],p={"sidebar position":6},o=void 0,u={unversionedId:"mapillary.utils/mapillary.utils.time",id:"mapillary.utils/mapillary.utils.time",isDocsHomePage:!1,title:"mapillary.utils.time",description:"mapillary.utils.time",source:"@site/docs/mapillary.utils/mapillary.utils.time.md",sourceDirName:"mapillary.utils",slug:"/mapillary.utils/mapillary.utils.time",permalink:"/mapillary-python-sdk/docs/mapillary.utils/mapillary.utils.time",editUrl:"https://github.com/mapillary/mapillary-python-sdk/tree/main/docs/docs/mapillary.utils/mapillary.utils.time.md",tags:[],version:"current",frontMatter:{"sidebar position":6},sidebar:"tutorialSidebar",previous:{title:"mapillary.utils",permalink:"/mapillary-python-sdk/docs/mapillary.utils/mapillary.utils"},next:{title:"mapillary.utils.verify",permalink:"/mapillary-python-sdk/docs/mapillary.utils/mapillary.utils.verify"}},m=[{value:"mapillary.utils.time",id:"mapillaryutilstime",children:[]},{value:"mapillary.utils.time.date_to_unix_timestamp(date: str)",id:"mapillaryutilstimedate_to_unix_timestampdate-str",children:[]}],s={toc:m};function c(t){var e=t.components,r=(0,n.Z)(t,l);return(0,a.kt)("wrapper",(0,i.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"mapillaryutilstime"},"mapillary.utils.time"),(0,a.kt)("p",null,"This module contains the time utilies for the UNIX epoch seconds, the time and the date range, and\nthe date filtering logic."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Copyright: (c) 2021 Facebook")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"License: MIT LICENSE")),(0,a.kt)("h3",{id:"mapillaryutilstimedate_to_unix_timestampdate-str"},"mapillary.utils.time.date_to_unix_timestamp(date: str)"),(0,a.kt)("p",null,"A utility function that converts the given date\ninto its UNIX epoch timestamp equivalent. It accepts the formats, ranging from\nYYYY-MM-DDTHH:MM:SS, to simply YYYY, and a permutation of the fields in between as well"),(0,a.kt)("p",null,"Has a special argument, \u2018","*","\u2019, which returns current timestamp"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("p",{parentName:"li"},"  ",(0,a.kt)("strong",{parentName:"p"},"date")," (",(0,a.kt)("em",{parentName:"p"},"str"),") \u2013 The date to get the UNIX timestamp epoch of"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Returns")),(0,a.kt)("p",{parentName:"li"},"  The UNIX timestamp equivalent of the input date"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Return type")),(0,a.kt)("p",{parentName:"li"},"  int"))),(0,a.kt)("p",null,"Usage:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},">>> from utils.time_utils import date_to_unix_timestamp\n>>> date_to_unix_timestamp('2020-10-23')\n... \"1603393200\"\n")))}c.isMDXComponent=!0}}]);